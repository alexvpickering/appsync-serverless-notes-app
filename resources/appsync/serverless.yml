service: 
  name: ${file(../config.json):name}-appsync
  publish: false # disable auto-publishing to the Serverless platform

# Use serverless-webpack plugin to transpile ES6/ES7
plugins:
  - serverless-appsync-plugin
  - serverless-stack-output

provider:
  name: aws
  runtime: nodejs6.10
  stage: prod
  region: us-east-2
  deploymentBucket: ${file(../config.json):name}-${self:provider.stage}-serverless-deployment


# Enable auto-packing of external modules
custom:
  output:
    file: ../../${file(../config.json):name}-client/src/outputs/appsync.json # toml, yaml, yml, and json format is available

  webpackIncludeModules: true
  accountId: ${file(../config.json):accountId} # found here https://console.aws.amazon.com/billing/home?#/account
  appSync:
    name: notes-appsync-api # defaults to api
    schema: schema.graphql # defaults schema.graphql
    apiId: ${file(../config.json):apiId} # only required for update-appsync/delete-appsync
    apiKey: # only required for update-appsync/delete-appsync
    authenticationType: AMAZON_COGNITO_USER_POOLS
    userPoolConfig:
      awsRegion: ${self:provider.region} # required # region
      defaultAction: ALLOW # ALLOW
      userPoolId: ${file(../cognito/user-pool.json):UserPoolId} # required # user pool ID

      
    # == Mapping Templates
    #
    mappingTemplatesLocation: mapping-templates # defaults to mapping-templates
    mappingTemplates:
      - dataSource: myDynamoDB # data source name
        type: Query # Query, Mutation, Subscription
        field: getNote
        request: "getNote-request.txt" # request mapping template name
        response: "getNote-response.txt" # response mapping template name
      - dataSource: myLambda 
        type: Note
        field: content
        request: "getContent-request.txt" 
        response: "getContent-response.txt" 
        
        
    # == AppSync Data Sources
    # (doesn't create resources)
    serviceRole: AppSyncServiceRole
    dataSources: 
      - type: AMAZON_DYNAMODB
        name: myDynamoDB # data source name
        description: Notes table # DynamoDB Table Description
        config:
          tableName: ${cf:notes-app-dynamodb-prod.TableName} # DynamoDB Table Name
          serviceRoleArn: "arn:aws:iam::${file(../config.json):accountId}:role/${cf:notes-app-dynamodb-prod.AppSyncDynamoDBServiceRole}"
      - type: AWS_LAMBDA
        name: myLambda
        description: Lambda DataSource
        config:
          lambdaFunctionArn: ${cf:notes-app-lambda-prod.GraphqlLambdaFunctionQualifiedArn}
          serviceRoleArn: "arn:aws:iam::${file(../config.json):accountId}:role/${cf:notes-app-lambda-prod.AppSyncLambdaServiceRole}"

